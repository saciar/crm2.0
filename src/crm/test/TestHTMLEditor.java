package crm.test;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeListener;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartMouseEvent;
import org.jfree.chart.ChartMouseListener;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.event.ChartProgressEvent;
import org.jfree.chart.event.ChartProgressListener;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.DefaultKeyedValues;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;

import crm.client.html.editor.BasicHTMLEditor;
import crm.gui.pantalla.PantallaEmergenteCotizacion;

public class TestHTMLEditor extends java.awt.Frame {

    BufferedImage grafica = null;

    /** Creates new form ventanaGrafica */
    public TestHTMLEditor() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {
        System.exit(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

    	TestHTMLEditor miventana = new TestHTMLEditor();
        miventana.setSize(400,400);
        miventana.show();
    }

    public BufferedImage creaImagen()
    {
       /* XYSeries series = new XYSeries("Evolucion");
        series.add(1, 23);
        series.add(2, 34);
        series.add(3, 51);
        series.add(4, 67);
        series.add(5, 89);
        series.add(6, 121);
        series.add(7, 137);
        XYDataset juegoDatos= new XYSeriesCollection(series);       
        
        JFreeChart chart = ChartFactory.createXYLineChart
        ("Sesiones en Adictos al Trabajo","Meses","Sesiones",juegoDatos,PlotOrientation.VERTICAL,
        false,
        false,
        true                // Show legend
        );*/
        
        DefaultKeyedValues values = new DefaultKeyedValues();
        values.addValue("Hola",50);
        values.addValue("Chau",50);
        
        
        PieDataset juegoDatos2= new DefaultPieDataset(values);
        
        JFreeChart chart2 = ChartFactory.createPieChart3D
        ("Sesiones en Adictos al Trabajo",juegoDatos2,
        true,
        true,
        false                // Show legend
        );

        PiePlot plot = (PiePlot) chart2.getPlot();
        plot.setExplodePercent(0,50);
        plot.setExplodePercent(100,50);
        
         BufferedImage image = chart2.createBufferedImage(300,300);
        return image;
    }

    public void paint(java.awt.Graphics g) {
        //super.paint(g);

        if(grafica == null)
        {
            grafica = this.creaImagen();
        }
        g.drawImage(grafica,30,30,null);
    }
    
    private class c implements ChartMouseListener{

		public void chartMouseClicked(ChartMouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		public void chartMouseMoved(ChartMouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}
    	
    }

}
