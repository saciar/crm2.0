/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditarFacturados.java
 *
 * Created on 05/10/2011, 13:35:35
 */

package crm.gui.facturacion;

import crm.client.managers.AdministradorManager;
import crm.client.managers.PresupuestosManager;
import crm.client.managers.UnidadAdministradorManager;
import crm.client.util.Util;
import crm.gui.Main;
import crm.gui.tablerenderer.buscadorPptoFacturados.PrespuestosFacturadosItem;
import crm.libraries.abm.entities.Usuario;
import crm.libraries.util.MessageUtil;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.rmi.RemoteException;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.lang.StringUtils;
import crm.gui.tablerenderer.buscadorPptoFacturados.PresupuestosFacturadosTableModel;

/**
 *
 * @author saciar
 */
public class EditarFacturados extends javax.swing.JDialog {

    /** Creates new form EditarFacturados */
    public EditarFacturados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton2.setIcon(new javax.swing.ImageIcon(getUrlImagen("disk.png")));
        jButton1 = new javax.swing.JButton();
        jButton1.setIcon(new javax.swing.ImageIcon(getUrlImagen("magnifier.png")));
        jButton3 = new javax.swing.JButton();
        jButton3.setIcon(new javax.swing.ImageIcon(getUrlImagen("cross.png")));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar presupuestos facturados");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel1.setText("Presupuestos Facturados");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Requerimientos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N

        jLabel2.setText("Nro de presupuesto");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jLabel3.setText("Nro de Factura");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2)))
                .addContainerGap(757, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new PresupuestosFacturadosTableModel()/*new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ppto", "Cliente", "Evento", "Nro Factura", "Fecha Factura", "Nro Factura Adelanto", "Fecha Factura adelanto", "id_factura", "id_factura_adelanto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        }*/);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1);

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        buscarFact();
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
}//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
       /* DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        
            PresupuestosManager manager = PresupuestosManager.instance();
            for (int i = 0; i < model.getRowCount(); i++) {
                try {
                    if (StringUtils.isNotEmpty((String)model.getValueAt(i, 3))) {
                        if ((Long)model.getValueAt(i, 7) > 0) {
                            manager.setFactura((Long)model.getValueAt(i, 7), (String)model.getValueAt(i, 3));
                        } else {
                            manager.setAsFacturado(String.valueOf((Long)model.getValueAt(i, 0)), user.getCodigo(), (String)model.getValueAt(i, 3));
                        }
                    }
                    if ((String)model.getValueAt(i, 5) != null) {
                        if ((Long)model.getValueAt(i, 8) > 0) {
                            manager.setFactura((Long)model.getValueAt(i, 8), (String)model.getValueAt(i, 5));
                        } else {
                            manager.setAsAdelantado(String.valueOf((Long)model.getValueAt(i, 0)), user.getCodigo(), (String)model.getValueAt(i, 5));
                        }
                    }
                } catch (RemoteException e1) {
                    // TODO Auto-generated catch block
                    e1.printStackTrace();
                }
            }*/
        PresupuestosFacturadosTableModel model = (PresupuestosFacturadosTableModel) jTable1.getModel();
            PresupuestosManager manager = PresupuestosManager.instance();
            for (int i = 0; i < model.getRowCount(); i++) {
                PrespuestosFacturadosItem item = model.getRow(i);
                try {
                    if (StringUtils.isNotEmpty(item.getNroFactura())) {
                        if (item.getId_factura1() > 0) {
                            manager.setFactura(item.getId_factura1(), item.getNroFactura());
                        } else {
                            manager.setAsFacturado(String.valueOf(item.getNroPpto()), user.getCodigo(), item.getNroFactura());
                        }
                    }
                    if (item.getNroFacturaAdelanto() != null) {
                        if (item.getId_factura2() > 0) {
                            manager.setFactura(item.getId_factura2(), item.getNroFacturaAdelanto());
                        } else {
                            manager.setAsAdelantado(String.valueOf(item.getNroPpto()), user.getCodigo(), item.getNroFacturaAdelanto());
                        }
                    }
                } catch (RemoteException e1) {
                    // TODO Auto-generated catch block
                    e1.printStackTrace();
                }
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!StringUtils.isBlank(jTextField1.getText())) {
                buscarFact();
            } else {
                Util.alertMsg(this, "Especifique un n�mero de factura");
            }
        }
    }//GEN-LAST:event_jTextField1KeyReleased


    public Usuario getUser() {
        return user;
    }

    public void setUser(Usuario user) {
        this.user = user;
    }

    private void buscarFact() {
        try {
            PresupuestosManager manager = PresupuestosManager.instance();
            String codAdmin = AdministradorManager.instance().getCodAdministradorByCodUsuario(user.getCodigo());

            PresupuestosFacturadosTableModel model = new PresupuestosFacturadosTableModel();

            String codUnidad = null;
            if (codAdmin != null) {
                codUnidad = UnidadAdministradorManager.instance().getCodigoUnidad(codAdmin);
            }
            if (codUnidad != null) {
                Object[] presupuestos = null;
                if (StringUtils.isBlank(jTextField1.getText())) {
                    presupuestos = manager.buscarParaReportesFacturacion(0, jTextField2.getText(), codUnidad);
                } else {
                    presupuestos = manager.buscarParaReportesFacturacion(Long.parseLong(jTextField1.getText()), jTextField2.getText(), codUnidad);
                }
                if (presupuestos != null && presupuestos.length > 0) {
                    for (int i = 0; i < presupuestos.length; i++) {
                        PrespuestosFacturadosItem item = new PrespuestosFacturadosItem();

                        Object[] p = (Object[]) presupuestos;
                        Object[] presupuestoDato = (Object[]) p[i];

                        item.setNroPpto((Long)(presupuestoDato[0]));
                        item.setCliente((String)(presupuestoDato[1]));
                        item.setNombreEvento((String)(presupuestoDato[2]));
                        item.setNroFactura((String)(presupuestoDato[3]));
                        item.setFechaFactura((String)(presupuestoDato[4]));
                        item.setNroFacturaAdelanto((String)(presupuestoDato[5]));
                        item.setFechaFacturaAdelanto((String)(presupuestoDato[6]));
                        if(presupuestoDato[7]!=null)
                        item.setId_factura1((Long)(presupuestoDato[7]));
                        if(presupuestoDato[8]!=null)
                        item.setId_factura2((Long)(presupuestoDato[8]));
                        model.addRow(item);
                       // model.addRow(presupuestoDato);
                    }
                    jTable1.setModel(model);

                    //jTable1.refreshTable();
                } else {
                    MessageUtil.showMessage("No existe presupuesto con esos requerimientos");
                }
            }
        } catch (RemoteException e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        }
    }

    public URL getUrlImagen(String imagen){

    	URL url =Main.class.getResource("imagenes/"+imagen);

    	return url;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
    private Usuario user;
}
